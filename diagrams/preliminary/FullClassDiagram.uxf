<diagram program="umletino" version="15.0.0"><zoom_level>3</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>688</x><y>168</y><w>63</w><h>24</h></coordinates><panel_attributes>Application &lt;&lt;Abstract Class&gt;&gt;
--
+start(Stage stage)
+main(String[] args)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>715</x><y>189</y><w>9</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>UMLClass</id><coordinates><x>661</x><y>213</y><w>117</w><h>15</h></coordinates><panel_attributes>App &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union
--
+ start(Stage stage): void
_+ main(String[] args): void_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1039</x><y>312</y><w>129</w><h>39</h></coordinates><panel_attributes>Confg &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union
--
_+ levelRepositoryStrategy: LevelRepositoryStrategy {read-only}_
_+ DEFAULT_BUILDER_ROWS: Integer {read-only}_
_+ DEFAULT_BUILDER_COLS: Integer {read-only}_
_+ DEFAULT_COLORS: Color[] {read-only}_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>961</x><y>843</y><w>99</w><h>66</h></coordinates><panel_attributes>RectangleGridBuildController &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/controller
--
- levelBuilder: LevelBuilder&lt;RectangleGridCell&gt;
--
+ RectangleGridBuildController()
+ handleChooseColorBtn(ActionEvent e): void
+ handleColorGridBtn(ActionEvent e): void
+ handleRestartBtn(ActionEvent e): void
+ handleExitBtn(ActionEvent e): void
+ handleSaveBtn(ActionEvent e): void
+ handleResizeBtn(ActionEvent e): void
+ setLevelBuilder(LevelBuilder levelBuilder): void
+ getLevelBuilder(): LevelBuilder&lt;RectangleGridCell&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>784</x><y>843</y><w>141</w><h>66</h></coordinates><panel_attributes>RectangleGridLevelController &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/controller
--
- level: Level&lt;RectangleGridLevelController&gt;
--
+ RectangleGridLevelController()
+ RectangleGridLevelController(Level&lt;RectangleGridLevelController&gt; level
+ setLevel(Level&lt;RectangleGridLevelController&gt; level): void
+ handleColorGridBtn(ActionEvent e): void
+ handleChooseColorBtn(ActionEvent e): void
+ handleRestartBtn(): void
+ handleMoveToMenuBtn(): void
+ handleGetHintsBtn(): void //TODO</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>616</x><y>840</y><w>99</w><h>30</h></coordinates><panel_attributes>MenuController &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/controller
--
+ handleMoveToMenuBtn(ActionEvent e): void
+ handleMoveToBuilderBtn(ActionEvent e): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>655</x><y>246</y><w>129</w><h>69</h></coordinates><panel_attributes>ViewSwitcher &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/controller
{number of instances = 1}
--
- stage: Stage
- viewMap: EnumMap&lt;ViewEnum, View&gt; {read-only}
_- instance: ViewSwitcher_
--
- ViewSwitcher()
_+getInstance(): ViewSwitcher_
+ setStage(Stage stage): void
+ addView(ViewEnum viewEnum, View view): void
+ switchView(ViewEnum viewEnum): void
+ switchView(ViewEnum, viewEnum, Observable model): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>841</x><y>444</y><w>99</w><h>90</h></coordinates><panel_attributes>Color &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/model
--
_- MAX_COLOR_VALUE: int {read-only}_
- colorId: int
- rValue: int {read-only}
- gValue: int {read-only}
- bValue: int {read-only}
--
+ Color(int rValue, int gValue, int bValue)
+ getColorId(): int
+ setColorId(int colorId): void
+ getRValue(): int
+ getGValue(): int
+ getBValue(): int
+ getReadableColor(String original): String
+ equals(Object obj): boolean
+ hashCode(): int
+ toString(): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>886</x><y>240</y><w>99</w><h>21</h></coordinates><panel_attributes>ColoredGraph&lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/model
--
TODO</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>931</x><y>258</y><w>9</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>886</x><y>276</y><w>99</w><h>21</h></coordinates><panel_attributes>V extends ColoredGraph.ColoredVertex
--
TODO</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>364</x><y>297</y><w>90</w><h>93</h></coordinates><panel_attributes>Level &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/model
--
# levelInfo: LevelInfo
# curNumTurn: int
# hints: List&lt;Move&lt;V&gt;&gt;
# curColor: Color
# graph: ColoredGraph&lt;V&gt;
--
+ Level(ColoredGraph&lt;V&gt; graph)
+ getLevelInfo(): LevelInfo
+ getVertexSet(): Set&lt;V&gt;
+ getGraph(): ColoredGraph&lt;V&gt;
+ getColorAt(int row int col): Color
+ numMoveRemaining(): int
+ switchColor(Color color): void
+ getCurrentColor(): Color
+ play(Move move): void
+ getColors(): List&lt;Color&gt;
+ getHints(): List&lt;Move&gt;
+ getLevelState(): LevelState
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>367</x><y>240</y><w>141</w><h>63</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>450;10;10;190</additional_attributes></element><element><id>Relation</id><coordinates><x>499</x><y>240</y><w>63</w><h>87</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;190;270</additional_attributes></element><element><id>UMLClass</id><coordinates><x>508</x><y>321</y><w>99</w><h>78</h></coordinates><panel_attributes>LevelBuilder &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/model
--
# graph: ColoredGraph&lt;V&gt;
# curColor: Color
--
+ LevelBuilder(ColoredGraph&lt;V&gt; graph)
+ getGraph(): ColoredGraph&lt;V&gt;
+ getVertexSet(): Set&lt;V&gt;
+ getColorAt(V vertex): Color
+ getColors(): List&lt;Color&gt;
+ switchColor(Color color): void
+ getCurrentColor(): Color
+ setColor(Color color, V vertex): void
+ setColorFlood(Color color, V vertex): void
+ restart(): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1066</x><y>384</y><w>99</w><h>30</h></coordinates><panel_attributes>LevelInfo &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/model
--
- levelId: int {read-only}
--
+ LevelInfo(int levelId)
+ getLevelId(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>439</x><y>618</y><w>99</w><h>27</h></coordinates><panel_attributes>LevelState &lt;&lt;Enumeration&gt;&gt;
Package::kami3/src/main/java/edu/union/model
--
ONGOING
WIN 
LOSE</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1066</x><y>420</y><w>99</w><h>36</h></coordinates><panel_attributes>Move &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/model
--
- vertex: V {read-only}
- color: Color {read-only}
--
+ Move(Color color, V vertex)
+ getColoredVertex(): V
+ getColor(): Color</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1147</x><y>444</y><w>18</w><h>12</h></coordinates><panel_attributes>Rose
bg=red
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>580</x><y>363</y><w>24</w><h>18</h></coordinates><panel_attributes>Rose
bg=red
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>418</x><y>375</y><w>18</w><h>12</h></coordinates><panel_attributes>Rose
bg=red
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>961</x><y>288</y><w>18</w><h>12</h></coordinates><panel_attributes>Rose
bg=red
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>964</x><y>252</y><w>18</w><h>12</h></coordinates><panel_attributes>Rose
bg=red
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1066</x><y>468</y><w>99</w><h>51</h></coordinates><panel_attributes>RectangleGridCell &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/model
--
+ row: int {read-only}
+ col: int {read-only}
--
+ RectangleGridCell(int row, int col)
+ equals(Object o): boolean
+ hashCode(): int
+ adjacentTo(ColoredGraph.ColoredVertex o): boolean
+ toString(): String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1138</x><y>504</y><w>18</w><h>12</h></coordinates><panel_attributes>Rose
bg=red
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>841</x><y>366</y><w>99</w><h>63</h></coordinates><panel_attributes>ColorRepository &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/service
{number of instances = 1}
--
_- instance: ColorRepository_
- colorMap: Map&lt;Integer, Color&gt; {read-only}
- idCount: int
--
- ColorRepository()
_+ getInstance(): ColorRepository_
+ listColors(): List&lt;Color&gt;
+ listColors(Iterable&lt;Integer&gt; ids): List&lt;Color&gt;
+ addColor(Color color): void
+ getColor(int id): Color</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>958</x><y>510</y><w>99</w><h>24</h></coordinates><panel_attributes>ColoredVertexFactory &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/service
--
_+ createColoredVertex(String params): ColoredVertex_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>421</x><y>426</y><w>132</w><h>63</h></coordinates><panel_attributes>LevelRepository &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/service
{number of instances = 1}
--
_- instance: LevelRepository_
- levelRepositoryStrategy: LevelRepositoryStrategy
--
- LevelRepository()
_+ getInstance(): LevelRepository_
+ setLevelRepositoryStrategy(LevelRepositoryStrategy strat): void
+ loadLevel(LevelInfo levelInfo): V extends ColoredVertex Level&lt;V&gt;
+ saveLevel(LevelBuilder&lt;V&gt; levelBuilder): void
+ listLevelInfo(): List&lt;LevelInfo&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>484</x><y>240</y><w>24</w><h>192</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>60;10;10;620</additional_attributes></element><element><id>UMLClass</id><coordinates><x>532</x><y>468</y><w>18</w><h>18</h></coordinates><panel_attributes>Rose
bg=red
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>421</x><y>498</y><w>132</w><h>27</h></coordinates><panel_attributes>LevelRepositoryStrategy &lt;&lt;Interface&gt;&gt;
Package::kami3/src/main/java/edu/union/service
--
loadLevel(LevelInfo levelInfo): V extends ColoredVertex Level&lt;V&gt;
saveLevel(LevelBuilder&lt;V&gt; levelBuilder): V extends ColoredVertex
listLevelInfo(): List&lt;LevelInfo&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>853</x><y>306</y><w>159</w><h>42</h></coordinates><panel_attributes>LevelSolver &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/service
{number of instances = 1}
--
_- instance: LevelSolver
--
- LevelSolver()
_+ getInstance(): LevelSolver_
+ solveColoredGraph(ColoredGraph&lt;V&gt; graph): V extends Colored Vertex List&lt;Move&lt;V&gt; &gt;

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>532</x><y>510</y><w>18</w><h>18</h></coordinates><panel_attributes>Rose
bg=red
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>409</x><y>540</y><w>159</w><h>60</h></coordinates><panel_attributes>RawTextLevelRepositoryStrategy &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/service
--
_+ DEFAULT_FOLDER_PATH: String_
_+ delimiter: String_
+ folderPath: String
--
+ RawTextLevelRepositoryStrategy()
+ setFolderPath(String folderPath): void
+ loadLevel(LevelInfo levelInfo): V extends ColoredVertex Level&lt;V&gt;
+ saveLevel(LevelBuilder&lt;V&gt; levelBuilder): void
+ listLevelInfo(): List&lt;LevelInfo&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>481</x><y>522</y><w>9</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>523</x><y>588</y><w>18</w><h>9</h></coordinates><panel_attributes>Rose
bg=red
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>973</x><y>339</y><w>18</w><h>6</h></coordinates><panel_attributes>Rose
bg=red
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>424</x><y>201</y><w>159</w><h>42</h></coordinates><panel_attributes>Observable &lt;&lt;Abstract Class&gt;&gt;
Package::kami3/src/main/java/edu/union/utils
--
- observers: Set&lt;Observer&gt; {read-only}
--
# Observable()
+ attach(Observer observer): void
+ detach(Observer observer): void
+ notifyObservers(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>691</x><y>630</y><w>99</w><h>21</h></coordinates><panel_attributes>Observer &lt;&lt;Interface&gt;&gt;
Package::kami3/src/main/java/edu/union/utils
--
update(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>610</x><y>759</y><w>159</w><h>75</h></coordinates><panel_attributes>MenuView &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/view
--
+ GRID_NUM_COLUMNS: int {read-only}
- levelRepository: LevelRepository
- menuController: menuController {read-only}
- scene: Scene {read-only}
- parent: BorderPane
- levelGridPane: Gridpane
- buttonGrid: Button[][]
--
+ MenuView(MenuController menuController)
+ getScene(): Scene
+ bindModel(Observable model): void
- renderView(): void
- styleButton(Button button, String toWrite): void
+ update(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>940</x><y>759</y><w>159</w><h>72</h></coordinates><panel_attributes>RectangleGridBuildView &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/view
--
- buildController: RectangleGridBuildController {read-only}
- scene: Scene {read-only}
- parent: BorderPane
- levelBuilder: LevelBuilder&lt;RectangleGridCell&gt;
- buttonGrid: Button[][]
- colorToChooseButton: Map&lt;Color,Button&gt;
- resultAlert: Alert
--
+ RectangleGridBuildView(RectangleGridBuildController buildController)
+ getScene(): void
+ bindModel(Observable model): void
- renderView(): void
+ update(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>775</x><y>759</y><w>159</w><h>72</h></coordinates><panel_attributes>RectangleGridLevelView &lt;&lt;Class&gt;&gt;
Package::kami3/src/main/java/edu/union/view
--
- levelController: RectangleGridLevelController {read-only}
- scene: Scene {read-only}
- parent: BorderPane
- level: Level&lt;RectangleGridCell&gt;
- buttonGrid: Button[][]
- colorToChooseButton: Map&lt;Color,Button&gt;
- resultAlert: Alert
- numMoveRemainingLabel: Label
- colorGridPane: GridPane (unused)
--
+ RectangleGridLevelView(RectangleGridLevelController levelController)
+ RectangleGridLevelView(RectangleGridLevelController levelController, Level level)
+ bindModel(Observable obj): void
- renderView(): void
+ update(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>865</x><y>618</y><w>99</w><h>24</h></coordinates><panel_attributes>View &lt;&lt;Interface&gt;&gt;
Package::kami3/src/main/java/edu/union/utils
--
getScene(): Scene
bindMode(Observable observableModel): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>685</x><y>639</y><w>234</w><h>126</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>760;10;10;400</additional_attributes></element><element><id>Relation</id><coordinates><x>850</x><y>639</y><w>69</w><h>126</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>210;10;10;400</additional_attributes></element><element><id>Relation</id><coordinates><x>910</x><y>639</y><w>117</w><h>126</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;370;400</additional_attributes></element><element><id>Relation</id><coordinates><x>736</x><y>648</y><w>291</w><h>117</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;950;370</additional_attributes></element><element><id>Relation</id><coordinates><x>685</x><y>648</y><w>60</w><h>117</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>180;10;10;370</additional_attributes></element><element><id>Relation</id><coordinates><x>736</x><y>648</y><w>123</w><h>117</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;390;370</additional_attributes></element><element><id>UMLClass</id><coordinates><x>958</x><y>471</y><w>99</w><h>27</h></coordinates><panel_attributes>ViewEnum &lt;&lt;Enumeration&gt;&gt;
Package::kami3/src/main/java/edu/union/model
--
MENU
LEVEL
BUILDER</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>754</x><y>219</y><w>486</w><h>330</h></coordinates><panel_attributes>lt=&lt;&lt;-
a rose is a rose</panel_attributes><additional_attributes>1600;1020;1590;110;900;50;290;10;10;1080;1590;1040</additional_attributes></element><element><id>Relation</id><coordinates><x>637</x><y>126</y><w>198</w><h>219</h></coordinates><panel_attributes>lt=&lt;&lt;-
a rose is a rose</panel_attributes><additional_attributes>480;710;640;70;70;20;10;670;480;700</additional_attributes></element><element><id>Relation</id><coordinates><x>178</x><y>90</y><w>465</w><h>585</h></coordinates><panel_attributes>lt=&lt;&lt;-
a rose is a rose</panel_attributes><additional_attributes>1390;1930;1530;220;700;10;10;1920;1360;1930</additional_attributes></element><element><id>Relation</id><coordinates><x>556</x><y>588</y><w>591</w><h>357</h></coordinates><panel_attributes>lt=&lt;&lt;-
a rose is a rose</panel_attributes><additional_attributes>1850;1150;10;1170;200;40;1950;10;1850;1150</additional_attributes></element></diagram>