<diagram program="umletino" version="15.0.0"><zoom_level>6</zoom_level><element><id>UMLClass</id><coordinates><x>288</x><y>534</y><w>150</w><h>30</h></coordinates><panel_attributes>/ColoredVertex/
-
/+adjacentTo(vertex: ColoredVertex): boolean/
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>66</x><y>534</y><w>198</w><h>156</h></coordinates><panel_attributes>template=V
ColoredGraph
--
+ColoredGraph()
+ColoredGraph(graph: ColoredGraph)
+getVertexSet(): Set&lt;V&gt;
+getNeighbors(vertex: V): Set&lt;V&gt;
+addVertex(vertex:V, color:int)
+addEdge(source:V, end:V)
+removeEdge(source:V, end:V)
+getVertexColor(vertex:V): int
+setVertexColor(vertex:V, color:int)
+getNumVertices():int
+buildGraphWithAdjacency()
+pruneGraph(): ColoredGraph&lt;V&gt;
+colorFloodFill(vertex:V, color:int)
+getColorIds(): List&lt;Integer&gt;

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>258</x><y>534</y><w>42</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>50;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>174</x><y>330</y><w>144</w><h>186</h></coordinates><panel_attributes>template=V
/Level/
-
# levelInfo: LevelInfo
# graph: ColoredGraph
# curNumTurn: int
# hints: List&lt;Move&lt;V&gt; &gt;
# curColor: Color
--
+Level(graph: ColoredGraph&lt;V&gt;,
			levelInfo: LevelInfo,
			hints: List&lt; Move&lt;Vl&gt; &gt;)
/+getLevelType(): str/
+numMoveRemaining(): int
+switchColor(color: Color)
+getCurrentColor(): Color
+play(move: Move&lt;V&gt;)
+getColors(): List&lt;Color&gt;
+getLevelState(): LevelState
+getColorAt(vertex: V)
+getHints(): List&lt; Move&lt;V&gt; &gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>312</x><y>336</y><w>18</w><h>210</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;330;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>252</x><y>552</y><w>48</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;60;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>24</x><y>366</y><w>102</w><h>48</h></coordinates><panel_attributes>LevelInfo
--
+ LevelInfo(id: int, type: str)
+ getLevelType(): str
+ getLevelId(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>60</x><y>426</y><w>60</w><h>54</h></coordinates><panel_attributes>LevelState
--
ONGOING
WIN
LOSE</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>120</x><y>372</y><w>66</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-&gt;
levelInfo</panel_attributes><additional_attributes>90;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>114</x><y>438</y><w>72</w><h>24</h></coordinates><panel_attributes>lt=&lt;..
uses</panel_attributes><additional_attributes>10;20;100;20</additional_attributes></element><element><id>Relation</id><coordinates><x>198</x><y>510</y><w>36</w><h>42</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-&gt;
graph</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>300</x><y>162</y><w>156</w><h>66</h></coordinates><panel_attributes>TriangleLevel
--
+OtherGridLevel(
		graph: ColoredGraph&lt;TriangleCell&gt;,
		levelInfo: LevelInfo,
		hints: List&lt; Move&lt;TriangleCell&gt; &gt;)

bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>288</y><w>114</w><h>54</h></coordinates><panel_attributes>LevelType
--
+RECTANGLE_GRID_LEVEL: str
+TRIANGLE_GRID_LEVEL
+HEXAGON_GRID_LEVEL
...

bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>330</x><y>432</y><w>126</w><h>60</h></coordinates><panel_attributes>TriangleCell
--
- pointList: List&lt;List&lt;Integer&gt;&gt;
- row: Int
- col: Int
--
+adjacentTo(o: ColoredVertex)


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>348</x><y>486</y><w>18</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>162</x><y>258</y><w>60</w><h>18</h></coordinates><panel_attributes>/Level&lt;OtherCell&gt;/
bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>180</x><y>270</y><w>72</w><h>78</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;V :: OtherCell&gt;</panel_attributes><additional_attributes>10;110;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>186</x><y>162</y><w>126</w><h>108</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;160;10;10;190;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>498</x><y>168</y><w>276</w><h>66</h></coordinates><panel_attributes>TriangleLevelRepository
--
- instance: OtherLevelRepository
--
+ getInstance(): OtherLevelRepository
#_loadLevel(levelnfo: LevelInfo)
#_saveLevel(levelBuilder: LevelBuilder, hints: List&lt;Move&gt;, folderPath: str)
#_saveLevel(levelHint: LevelHint, folderPath: str)

bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>582</x><y>264</y><w>396</w><h>96</h></coordinates><panel_attributes>lt=&lt;..
uses</panel_attributes><additional_attributes>10;140;640;140;640;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>462</x><y>432</y><w>126</w><h>60</h></coordinates><panel_attributes>HexagonCell
--
- pointList: List&lt;List&lt;Integer&gt;&gt;
- row: Int
- col: Int
--
+adjacentTo(o: ColoredVertex)


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>300</x><y>234</y><w>156</w><h>66</h></coordinates><panel_attributes>HexagonLevel
--
+OtherGridLevel(
		graph: ColoredGraph&lt;TriangleCell&gt;,
		levelInfo: LevelInfo,
		hints: List&lt; Move&lt;TriangleCell&gt; &gt;)

bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>498</x><y>240</y><w>276</w><h>66</h></coordinates><panel_attributes>HexagonLevelRepository
--
- instance: OtherLevelRepository
--
+ getInstance(): OtherLevelRepository
#_loadLevel(levelnfo: LevelInfo)
#_saveLevel(levelBuilder: LevelBuilder, hints: List&lt;Move&gt;, folderPath: str)
#_saveLevel(levelHint: LevelHint, folderPath: str)
bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>450</x><y>258</y><w>60</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;.
creates</panel_attributes><additional_attributes>10;20;80;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>228</x><y>258</y><w>60</w><h>18</h></coordinates><panel_attributes>/Level&lt;OtherCell&gt;/
bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>252</x><y>234</y><w>60</w><h>36</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;40;10;10;80;10</additional_attributes></element><element><id>Relation</id><coordinates><x>258</x><y>270</y><w>72</w><h>78</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;V :: OtherCell&gt;</panel_attributes><additional_attributes>10;110;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>408</x><y>342</y><w>180</w><h>54</h></coordinates><panel_attributes>ColoredGraphSolver
--
- instance: ColoredGraphSolver
--
+ getInstance(): ColoredGraphSolver
+ solve(graph: ColoredGraph&lt;V&gt;): List&lt; Move&lt;V&gt; &gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>852</x><y>162</y><w>246</w><h>108</h></coordinates><panel_attributes>/LevelRepository/
--
#successor: LevelRepository
--
/+loadLevel(levelnfo: LevelInfo)/
/+saveLevel(levelBuilder: LevelBuilder, folderPath: str)/
/+saveLevel(levelHint: LevelHint, folderPath: str)/
+setSuccessor(levelRepository: LevelRepository)

/#_loadLevel(levelnfo: LevelInfo)/
/#_saveLevel(levelBuilder: LevelBuilder, hints: List&lt;Move&gt;, folderPath: str)/
/#_saveLevel(levelHint: LevelHint, folderPath: str)/
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>768</x><y>252</y><w>96</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;140;10</additional_attributes></element><element><id>Relation</id><coordinates><x>768</x><y>180</y><w>96</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;140;10</additional_attributes></element></diagram>