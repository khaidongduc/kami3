<diagram program="umletino" version="15.0.0"><zoom_level>5</zoom_level><element><id>UMLClass</id><coordinates><x>285</x><y>310</y><w>125</w><h>25</h></coordinates><panel_attributes>/ColoredVertex/
-
/+adjacentTo(vertex: ColoredVertex): boolean/
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>100</x><y>310</y><w>165</w><h>130</h></coordinates><panel_attributes>template=V
ColoredGraph
--
+ColoredGraph()
+ColoredGraph(graph: ColoredGraph)
+getVertexSet(): Set&lt;V&gt;
+getNeighbors(vertex: V): Set&lt;V&gt;
+addVertex(vertex:V, color:int)
+addEdge(source:V, end:V)
+removeEdge(source:V, end:V)
+getVertexColor(vertex:V): int
+setVertexColor(vertex:V, color:int)
+getNumVertices():int
+buildGraphWithAdjacency()
+pruneGraph(): ColoredGraph&lt;V&gt;
+colorFloodFill(vertex:V, color:int)
+getColorIds(): List&lt;Integer&gt;

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>260</x><y>310</y><w>35</w><h>15</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>50;10;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>30</x><y>465</y><w>125</w><h>105</h></coordinates><panel_attributes>Algorithm for buildGraphWithAdjacency()
--

for(V vertex : getVertexSet()){
    for(V anotherVertex : getVertexSet()) 
	removeEdge(vertex, anotherVertex);
}
for(V vertex : getVertexSet()){
    for(V anotherVertex : getVertexSet()) 
	if(vertex.adjacentTo(anotherVertex)){
       		addEdge(vertex, anotherVertex);
    	}
}
bg=orange</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>190</x><y>140</y><w>120</w><h>155</h></coordinates><panel_attributes>template=V
/Level/
-
# levelInfo: LevelInfo
# graph: ColoredGraph
# curNumTurn: int
# hints: List&lt;Move&lt;V&gt; &gt;
# curColor: Color
--
+Level(graph: ColoredGraph&lt;V&gt;, 
			levelInfo: LevelInfo,
			hints: List&lt; Move&lt;Vl&gt; &gt;)
/+getLevelType(): str/
+numMoveRemaining(): int
+switchColor(color: Color)
+getCurrentColor(): Color
+play(move: Move&lt;V&gt;)
+getColors(): List&lt;Color&gt;
+getLevelState(): LevelState
+getColorAt(vertex: V)
+getHints(): List&lt; Move&lt;V&gt; &gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>305</x><y>145</y><w>15</w><h>175</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;330;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>320</x><y>365</y><w>105</w><h>45</h></coordinates><panel_attributes>RectangleGridCell
--
+row: int
+col: int
--
+adjacentTo(o: ColoredVertex)


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>335</x><y>330</y><w>15</w><h>45</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>245</x><y>90</y><w>85</w><h>15</h></coordinates><panel_attributes>/Level&lt;RectangleGridCell&gt;/


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>260</x><y>100</y><w>80</w><h>55</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;V :: RectangleGridCell&gt;</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>255</x><y>325</y><w>40</w><h>15</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;60;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>345</x><y>90</y><w>130</w><h>75</h></coordinates><panel_attributes>RectangleGridLevel
--
+RectangleGridLevel(
		graph: ColoredGraph&lt;RectangleGridCell&gt;, 
		levelInfo: LevelInfo,
		hints: List&lt; Move&lt;RectangleGridCell&gt; &gt;)
+getLevelType(): str
+getNumRows()
+getNumCols()


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>325</x><y>90</y><w>30</w><h>15</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;40;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>180</x><y>465</y><w>120</w><h>105</h></coordinates><panel_attributes>template=V
/LevelBuilder/
--
# graph: ColoredGraph
# curColor: Color
--
/+getLevelType(): str/
+getColors(): List&lt;Color&gt;
+switchColor(color: Color)
+getCurrentColor(): Color
+setColor(color:Color, vertex:V)
+setColorFlood(color:Color, vertex:V)
+restart()

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>215</x><y>435</y><w>30</w><h>45</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-&gt;
graph</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>290</x><y>330</y><w>15</w><h>145</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;268</additional_attributes></element><element><id>UMLClass</id><coordinates><x>330</x><y>525</y><w>140</w><h>55</h></coordinates><panel_attributes>RectangleGridLevelBuilder
--
+RectangleGridLevelBuilder(rows:int, cols: int)
+getNumRows()
+getNumCols()
+changeGridSize(rows: int, cols: int)
+getLevelType(): str


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>365</x><y>480</y><w>90</w><h>15</h></coordinates><panel_attributes>/LevelBuilder&lt;RectangleGridCell&gt;/


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>290</x><y>475</y><w>85</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;V :: 
RectangleGridCell&gt;</panel_attributes><additional_attributes>10;20;150;20</additional_attributes></element><element><id>Relation</id><coordinates><x>405</x><y>490</y><w>15</w><h>45</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>485</x><y>420</y><w>140</w><h>70</h></coordinates><panel_attributes>Color
--
+Color(rValue:int, bValue:int, gValue:int)
+Color(id:int, rValue:int, bValue:int, gValue:int)
+getRValue():int
+getGValue():int
+getBValue():int
+getId():int
+setId(id: int)

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>445</x><y>330</y><w>140</w><h>65</h></coordinates><panel_attributes>ColorRepository
--
- instance: ColorRepository
--
+ getInstance(): ColorRepository
+ listColors(): List&lt;Color&gt;
+ listColors(ids: List&lt;Integers&gt;): List&lt;Color&gt;
+ addColor(Color color)
+ getColor(id: int): Color
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>55</x><y>170</y><w>85</w><h>40</h></coordinates><panel_attributes>LevelInfo
--
+ LevelInfo(id: int, type: str)
+ getLevelType(): str
+ getLevelId(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>90</x><y>220</y><w>50</w><h>45</h></coordinates><panel_attributes>LevelState
--
ONGOING
WIN
LOSE</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>530</x><y>390</y><w>15</w><h>40</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>545</x><y>140</y><w>180</w><h>55</h></coordinates><panel_attributes>TextRectangleGridLevelRepository
--
- instance: RectangleGridLevelRepository
--
+ getInstance(): RectangleGridLevelRepository
+ loadLevel(levelInfo: LevelInfo)
+ saveLevel(levelBuilder: LevelBuilder)


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>635</x><y>275</y><w>150</w><h>45</h></coordinates><panel_attributes>ColoredGraphSolver
--
- instance: ColoredGraphSolver
--
+ getInstance(): ColoredGraphSolver
+ solve(graph: ColoredGraph&lt;V&gt;): List&lt; Move&lt;V&gt; &gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>705</x><y>190</y><w>25</w><h>95</h></coordinates><panel_attributes>lt=&lt;..
uses</panel_attributes><additional_attributes>10;170;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>470</x><y>140</y><w>85</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;.
creates</panel_attributes><additional_attributes>10;20;150;20</additional_attributes></element><element><id>Relation</id><coordinates><x>455</x><y>160</y><w>25</w><h>180</h></coordinates><panel_attributes>lt=&lt;..
uses</panel_attributes><additional_attributes>10;340;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>455</x><y>390</y><w>25</w><h>145</h></coordinates><panel_attributes>lt=&lt;..
uses</panel_attributes><additional_attributes>10;10;10;270</additional_attributes></element><element><id>UMLClass</id><coordinates><x>800</x><y>205</y><w>175</w><h>55</h></coordinates><panel_attributes>LevelRepositoryManager
--
+setFolderPath(folderPath: str)
+register(levelTypeStr: str, levelRepository: levelRepository)
+loadLevel(levelInfo: LevelInfo): Level
+saveLevel(levelBuilder builder)
+listLevels(): List&lt;LevelInfo&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>800</x><y>125</y><w>180</w><h>50</h></coordinates><panel_attributes>/LevelRepository/
--
#successor: LevelRepository
--
/+loadLevel(levelnfo: LevelInfo)/
/+saveLevel(levelBuilder: LevelBuilder, folderPath: str)/
+setSuccessor(levelRepository: LevelRepository)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>720</x><y>60</y><w>185</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>350;130;350;10;60;10;60;180;10;180</additional_attributes></element><element><id>Relation</id><coordinates><x>880</x><y>170</y><w>15</w><h>45</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>135</x><y>175</y><w>65</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-&gt;
levelInfo</panel_attributes><additional_attributes>110;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>135</x><y>230</y><w>65</w><h>20</h></coordinates><panel_attributes>lt=&lt;..
uses</panel_attributes><additional_attributes>10;20;110;20</additional_attributes></element><element><id>Relation</id><coordinates><x>210</x><y>290</y><w>30</w><h>35</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-&gt;
graph</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>590</x><y>525</y><w>195</w><h>30</h></coordinates><panel_attributes>LevelBuilderFactory
--
+createLevelBuilder(levelType: str): LevelBuilder
+registerPrototype(levelBuilder: LevelBuilder)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>465</x><y>530</y><w>135</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;.
creates</panel_attributes><additional_attributes>10;20;250;20</additional_attributes></element><element><id>Relation</id><coordinates><x>0</x><y>405</y><w>110</w><h>85</h></coordinates><panel_attributes>lt=..
</panel_attributes><additional_attributes>200;10;150;10;10;90;10;150;60;150</additional_attributes></element><element><id>UMLClass</id><coordinates><x>345</x><y>0</y><w>130</w><h>75</h></coordinates><panel_attributes>OtherLevel
--
+OtherGridLevel(
		graph: ColoredGraph&lt;OtherGridCell&gt;, 
		levelInfo: LevelInfo,
		hints: List&lt; Move&lt;OtherGridCell&gt; &gt;)

[more functionalities based 
on the specific levelType]

bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>45</x><y>105</y><w>95</w><h>35</h></coordinates><panel_attributes>LevelType
--
+RECTANGLE_GRID_LEVEL: str
...

bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>645</x><y>460</y><w>140</w><h>55</h></coordinates><panel_attributes>a prototype levelBuilder can be registered 
with the factory beforehand
there is getLevelType() method in levelBuilder
when the user asked to make a levelBuilder of 
some type levelType, the previously registered
prototype is cloned and given to the client
bg=orange</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>320</x><y>225</y><w>105</w><h>50</h></coordinates><panel_attributes>OtherCell
--
[more functionalities based 
on the specific levelType]

--
+adjacentTo(o: ColoredVertex)


bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>335</x><y>270</y><w>15</w><h>50</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>180</x><y>50</y><w>50</w><h>15</h></coordinates><panel_attributes>/Level&lt;OtherCell&gt;/
bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>195</x><y>60</y><w>60</w><h>95</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;V :: OtherCell&gt;</panel_attributes><additional_attributes>10;170;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>225</x><y>50</y><w>130</w><h>15</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;240;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>330</x><y>600</y><w>140</w><h>55</h></coordinates><panel_attributes>OtherLevelBuilder
--
+getLevelType(): str

[more functionalities based 
on the specific levelType]

bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>200</x><y>620</y><w>90</w><h>15</h></coordinates><panel_attributes>/LevelBuilder&lt;OtherCell&gt;/


bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>240</x><y>565</y><w>60</w><h>65</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;V :: OtherCell&gt;</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>285</x><y>625</y><w>55</w><h>15</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>465</x><y>540</y><w>135</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;.</panel_attributes><additional_attributes>10;140;120;10;250;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>545</x><y>45</y><w>180</w><h>55</h></coordinates><panel_attributes>[format]OtherLevelRepository
--
- instance: OtherLevelRepository
--
+ getInstance(): OtherLevelRepository
+ loadLevel(levelInfo: LevelInfo)
+ saveLevel(levelBuilder: LevelBuilder)


bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>720</x><y>60</y><w>185</w><h>75</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>350;130;350;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>470</x><y>50</y><w>85</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;.
creates</panel_attributes><additional_attributes>10;20;150;20</additional_attributes></element><element><id>Relation</id><coordinates><x>720</x><y>80</y><w>40</w><h>205</h></coordinates><panel_attributes>lt=&lt;..
uses</panel_attributes><additional_attributes>40;390;40;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>975</x><y>130</y><w>80</w><h>45</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;
successor</panel_attributes><additional_attributes>10;10;90;10;90;70;10;70</additional_attributes></element></diagram>