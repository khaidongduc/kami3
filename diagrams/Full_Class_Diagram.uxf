<diagram program="umletino" version="15.0.0"><zoom_level>6</zoom_level><element><id>UMLClass</id><coordinates><x>636</x><y>372</y><w>150</w><h>30</h></coordinates><panel_attributes>/ColoredVertex/
-
/+adjacentTo(vertex: ColoredVertex): boolean/
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>414</x><y>372</y><w>198</w><h>156</h></coordinates><panel_attributes>template=V
ColoredGraph
--
+ColoredGraph()
+ColoredGraph(graph: ColoredGraph)
+getVertexSet(): Set&lt;V&gt;
+getNeighbors(vertex: V): Set&lt;V&gt;
+addVertex(vertex:V, color:int)
+addEdge(source:V, end:V)
+removeEdge(source:V, end:V)
+getVertexColor(vertex:V): int
+setVertexColor(vertex:V, color:int)
+getNumVertices():int
+buildGraphWithAdjacency()
+pruneGraph(): ColoredGraph&lt;V&gt;
+colorFloodFill(vertex:V, color:int)
+getColorIds(): List&lt;Integer&gt;

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>606</x><y>372</y><w>42</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>50;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>522</x><y>168</y><w>144</w><h>186</h></coordinates><panel_attributes>template=V
/Level/
-
# levelInfo: LevelInfo
# graph: ColoredGraph
# curNumTurn: int
# hints: List&lt;Move&lt;V&gt; &gt;
# curColor: Color
--
+Level(graph: ColoredGraph&lt;V&gt;, 
			levelInfo: LevelInfo,
			hints: List&lt; Move&lt;Vl&gt; &gt;)
/+getLevelType(): str/
+numMoveRemaining(): int
+switchColor(color: Color)
+getCurrentColor(): Color
+play(move: Move&lt;V&gt;)
+getColors(): List&lt;Color&gt;
+getLevelState(): LevelState
+getColorAt(vertex: V)
+getHints(): List&lt; Move&lt;V&gt; &gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>660</x><y>174</y><w>18</w><h>210</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;330;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>678</x><y>438</y><w>126</w><h>54</h></coordinates><panel_attributes>RectangleGridCell
--
+row: int
+col: int
--
+adjacentTo(o: ColoredVertex)


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>696</x><y>396</y><w>18</w><h>54</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>588</x><y>108</y><w>102</w><h>18</h></coordinates><panel_attributes>/Level&lt;RectangleGridCell&gt;/


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>606</x><y>120</y><w>96</w><h>66</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;V :: RectangleGridCell&gt;</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>600</x><y>390</y><w>48</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;60;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>708</x><y>108</y><w>156</w><h>90</h></coordinates><panel_attributes>RectangleGridLevel
--
+RectangleGridLevel(
		graph: ColoredGraph&lt;RectangleGridCell&gt;, 
		levelInfo: LevelInfo,
		hints: List&lt; Move&lt;RectangleGridCell&gt; &gt;)
+getLevelType(): str
+getNumRows()
+getNumCols()


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>684</x><y>108</y><w>36</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;40;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>510</x><y>558</y><w>144</w><h>126</h></coordinates><panel_attributes>template=V
/LevelBuilder/
--
# graph: ColoredGraph
# curColor: Color
--
/+getLevelType(): str/
+getColors(): List&lt;Color&gt;
+switchColor(color: Color)
+getCurrentColor(): Color
+setColor(color:Color, vertex:V)
+setColorFlood(color:Color, vertex:V)
+restart()

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>552</x><y>522</y><w>36</w><h>54</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-&gt;
graph</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>642</x><y>396</y><w>18</w><h>174</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;268</additional_attributes></element><element><id>UMLClass</id><coordinates><x>690</x><y>630</y><w>168</w><h>66</h></coordinates><panel_attributes>RectangleGridLevelBuilder
--
+RectangleGridLevelBuilder(rows:int, cols: int)
+getNumRows()
+getNumCols()
+changeGridSize(rows: int, cols: int)
+getLevelType(): str


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>732</x><y>576</y><w>108</w><h>18</h></coordinates><panel_attributes>/LevelBuilder&lt;RectangleGridCell&gt;/


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>642</x><y>570</y><w>102</w><h>36</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;V :: 
RectangleGridCell&gt;</panel_attributes><additional_attributes>10;20;150;20</additional_attributes></element><element><id>Relation</id><coordinates><x>780</x><y>588</y><w>18</w><h>54</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>876</x><y>504</y><w>168</w><h>84</h></coordinates><panel_attributes>Color
--
+Color(rValue:int, bValue:int, gValue:int)
+Color(id:int, rValue:int, bValue:int, gValue:int)
+getRValue():int
+getGValue():int
+getBValue():int
+getId():int
+setId(id: int)

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>828</x><y>396</y><w>168</w><h>78</h></coordinates><panel_attributes>ColorRepository
--
- instance: ColorRepository
--
+ getInstance(): ColorRepository
+ listColors(): List&lt;Color&gt;
+ listColors(ids: List&lt;Integers&gt;): List&lt;Color&gt;
+ addColor(Color color)
+ getColor(id: int): Color
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>360</x><y>204</y><w>102</w><h>48</h></coordinates><panel_attributes>LevelInfo
--
+ LevelInfo(id: int, type: str)
+ getLevelType(): str
+ getLevelId(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>402</x><y>264</y><w>60</w><h>54</h></coordinates><panel_attributes>LevelState
--
ONGOING
WIN
LOSE</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>930</x><y>468</y><w>18</w><h>48</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>948</x><y>168</y><w>216</w><h>66</h></coordinates><panel_attributes>TextRectangleGridLevelRepository
--
- instance: RectangleGridLevelRepository
--
+ getInstance(): RectangleGridLevelRepository
+ loadLevel(levelInfo: LevelInfo)
+ saveLevel(levelBuilder: LevelBuilder)


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1056</x><y>330</y><w>180</w><h>54</h></coordinates><panel_attributes>ColoredGraphSolver
--
- instance: ColoredGraphSolver
--
+ getInstance(): ColoredGraphSolver
+ solve(graph: ColoredGraph&lt;V&gt;): List&lt; Move&lt;V&gt; &gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1140</x><y>228</y><w>30</w><h>114</h></coordinates><panel_attributes>lt=&lt;..
uses</panel_attributes><additional_attributes>10;170;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>858</x><y>168</y><w>102</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;.
creates</panel_attributes><additional_attributes>10;20;150;20</additional_attributes></element><element><id>Relation</id><coordinates><x>840</x><y>192</y><w>30</w><h>216</h></coordinates><panel_attributes>lt=&lt;..
uses</panel_attributes><additional_attributes>10;340;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>840</x><y>468</y><w>30</w><h>174</h></coordinates><panel_attributes>lt=&lt;..
uses</panel_attributes><additional_attributes>10;10;10;270</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1254</x><y>246</y><w>210</w><h>72</h></coordinates><panel_attributes>LevelRepositoryManager
--
+setFolderPath(folderPath: str)
+register(levelTypeStr: str, levelRepository: levelRepository)
+loadLevel(levelInfo: LevelInfo): Level
+saveLevel(levelBuilder: LevelBuilder)
+saveLevel(levelHint: LevelHint)
+listLevels(): List&lt;LevelInfo&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1254</x><y>150</y><w>216</w><h>66</h></coordinates><panel_attributes>/LevelRepository/
--
#successor: LevelRepository
--
/+loadLevel(levelnfo: LevelInfo)/
/+saveLevel(levelBuilder: LevelBuilder, folderPath: str)/
/+saveLevel(levelHint: LevelHint, folderPath: str)/
+setSuccessor(levelRepository: LevelRepository)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1158</x><y>72</y><w>222</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>350;130;350;10;60;10;60;180;10;180</additional_attributes></element><element><id>Relation</id><coordinates><x>1350</x><y>210</y><w>18</w><h>48</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;60;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>456</x><y>210</y><w>78</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-&gt;
levelInfo</panel_attributes><additional_attributes>110;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>456</x><y>276</y><w>78</w><h>24</h></coordinates><panel_attributes>lt=&lt;..
uses</panel_attributes><additional_attributes>10;20;110;20</additional_attributes></element><element><id>Relation</id><coordinates><x>546</x><y>348</y><w>36</w><h>42</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-&gt;
graph</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1002</x><y>630</y><w>234</w><h>36</h></coordinates><panel_attributes>LevelBuilderFactory
--
+createLevelBuilder(levelType: str): LevelBuilder
+registerPrototype(levelBuilder: LevelBuilder)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>852</x><y>636</y><w>162</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;.
creates</panel_attributes><additional_attributes>10;20;250;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>708</x><y>0</y><w>156</w><h>90</h></coordinates><panel_attributes>OtherLevel
--
+OtherGridLevel(
		graph: ColoredGraph&lt;OtherGridCell&gt;, 
		levelInfo: LevelInfo,
		hints: List&lt; Move&lt;OtherGridCell&gt; &gt;)

[more functionalities based 
on the specific levelType]

bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>348</x><y>126</y><w>114</w><h>42</h></coordinates><panel_attributes>LevelType
--
+RECTANGLE_GRID_LEVEL: str
...

bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>1068</x><y>552</y><w>168</w><h>66</h></coordinates><panel_attributes>a prototype levelBuilder can be registered 
with the factory beforehand
there is getLevelType() method in levelBuilder
when the user asked to make a levelBuilder of 
some type levelType, the previously registered
prototype is cloned and given to the client
bg=orange</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>678</x><y>270</y><w>126</w><h>60</h></coordinates><panel_attributes>OtherCell
--
[more functionalities based 
on the specific levelType]

--
+adjacentTo(o: ColoredVertex)


bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>696</x><y>324</y><w>18</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>510</x><y>60</y><w>60</w><h>18</h></coordinates><panel_attributes>/Level&lt;OtherCell&gt;/
bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>528</x><y>72</y><w>72</w><h>114</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;V :: OtherCell&gt;</panel_attributes><additional_attributes>10;170;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>564</x><y>60</y><w>156</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;240;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>690</x><y>720</y><w>168</w><h>66</h></coordinates><panel_attributes>OtherLevelBuilder
--
+getLevelType(): str

[more functionalities based 
on the specific levelType]

bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>534</x><y>744</y><w>108</w><h>18</h></coordinates><panel_attributes>/LevelBuilder&lt;OtherCell&gt;/


bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>582</x><y>678</y><w>72</w><h>78</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;V :: OtherCell&gt;</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>636</x><y>750</y><w>66</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>852</x><y>648</y><w>162</w><h>96</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;.</panel_attributes><additional_attributes>10;140;120;10;250;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>948</x><y>54</y><w>216</w><h>66</h></coordinates><panel_attributes>[format]OtherLevelRepository
--
- instance: OtherLevelRepository
--
+ getInstance(): OtherLevelRepository
+ loadLevel(levelInfo: LevelInfo)
+ saveLevel(levelBuilder: LevelBuilder)


bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1158</x><y>72</y><w>222</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>350;130;350;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>858</x><y>60</y><w>102</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;.
creates</panel_attributes><additional_attributes>10;20;150;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1158</x><y>96</y><w>48</w><h>246</h></coordinates><panel_attributes>lt=&lt;..
uses</panel_attributes><additional_attributes>40;390;40;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1464</x><y>156</y><w>96</w><h>54</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;
successor</panel_attributes><additional_attributes>10;10;90;10;90;70;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>348</x><y>558</y><w>144</w><h>144</h></coordinates><panel_attributes>template=V
/LevelHint/
--
# graph: ColoredGraph
# curColor: Color
-List&lt;Move&lt;V&gt;&gt; hintList
--
/+getLevelType(): str/
+getColorAt(vertex: V): Color
+getColors(): List&lt;Color&gt;
+switchColor(color Color)
+getCurrentColor(): Color
+getGraph(): ColoredGraph&lt;V&gt;
+getLevelState(): LevelState
+setHints(List&lt;PlayMoveCommand&gt;)
+getHints(): List&lt;Move&lt;V&gt;&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>444</x><y>522</y><w>36</w><h>54</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-&gt;
graph</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>66</x><y>594</y><w>108</w><h>18</h></coordinates><panel_attributes>/LevelHint&lt;RectangleGridCell&gt;/


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>168</x><y>594</y><w>192</w><h>36</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;V :: 
RectangleGridCell&gt;</panel_attributes><additional_attributes>300;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>510</y><w>306</w><h>60</h></coordinates><panel_attributes>RectangleHintInputLevel
--
+RectangleGridLevelBuilder(graph: ColoredGraph&lt;RectangleGridCell&gt;, rows:int, cols: int)
+getRows()
+getCols()
+getLevelType(): str


bg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>114</x><y>564</y><w>18</w><h>42</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;50;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>312</x><y>282</y><w>96</w><h>318</h></coordinates><panel_attributes>lt=&lt;..
uses</panel_attributes><additional_attributes>140;10;10;10;10;460;60;510</additional_attributes></element><element><id>UMLClass</id><coordinates><x>36</x><y>666</y><w>168</w><h>66</h></coordinates><panel_attributes>OtherLevelBuilder
--
+getLevelType(): str

[more functionalities based 
on the specific levelType]

bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>66</x><y>630</y><w>108</w><h>18</h></coordinates><panel_attributes>/LevelHint&lt;OtherCell&gt;/


bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>168</x><y>624</y><w>192</w><h>36</h></coordinates><panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;V :: 
RectangleGridCell&gt;</panel_attributes><additional_attributes>300;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>114</x><y>642</y><w>18</w><h>36</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element></diagram>